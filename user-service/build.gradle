plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.11'
    id 'io.spring.dependency-management' version '1.1.6'
    id "io.freefair.lombok" version "8.4"
}

group = 'ru.clevertec'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    openapiVersion = '2.1.0'
    jjwtVersion = '0.11.5'
    mapstructVersion = '1.5.5.Final'
    postgresqlContainersVersion = '1.19.3'
    set('springCloudVersion', "2023.0.2")
}

dependencies {
    implementation 'ru.clevertec:logging-starter:0.0.1-SNAPSHOT'
    implementation 'ru.clevertec:exception-handler-starter:0.0.1-SNAPSHOT'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapiVersion}"

    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen"

    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"

    implementation "org.liquibase:liquibase-core"
    runtimeOnly "org.postgresql:postgresql"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.testcontainers:postgresql:${postgresqlContainersVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${postgresqlContainersVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}